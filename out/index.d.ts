import { AxiosRequestConfig } from 'axios';
import { Callback } from './callback';
import { Config } from './config';
import { ApplicationRoles, AppProperties, AuditRecords, Avatars, Backlog, Board, Builds, Dashboards, Deployments, DevelopmentInformation, DynamicModules, Epic, FeatureFlags, Filters, FilterSharing, GroupAndUserPicker, Groups, Issue, IssueAttachments, IssueCommentProperties, IssueComments, IssueCustomFieldOptions, IssueCustomFieldOptionsApps, IssueFieldConfigurations, IssueFields, IssueLinks, IssueLinkTypes, IssueNavigatorSettings, IssueNotificationSchemes, IssuePriorities, IssueProperties, IssueRemoteLinks, IssueResolutions, Issues, IssueSearch, IssueSecurityLevel, IssueSecuritySchemes, IssueTypeProperties, IssueTypes, IssueTypeSchemes, IssueTypeScreenSchemes, IssueVotes, IssueWatchers, IssueWorklogProperties, IssueWorklogs, JiraExpressions, JiraSettings, Jql, Labels, Myself, Permissions, PermissionSchemes, ProjectAvatars, ProjectCategories, ProjectComponents, ProjectEmail, ProjectKeyAndNameValidation, ProjectPermissionSchemes, ProjectProperties, ProjectRoleActors, ProjectRoles, Projects, ProjectTypes, ProjectVersions, Screens, ScreenSchemes, ScreenTabFields, ScreenTabs, Sprint, Tasks, TimeTracking, UserProperties, Users, UserSearch, Webhooks, Workflows, WorkflowSchemeDrafts, WorkflowSchemeProjectAssociations, WorkflowSchemes, WorkflowStatusCategories, WorkflowStatuses, WorkflowTransitionProperties, WorkflowTransitionRules } from './api';
export * as Models from './models';
export * from './callback';
export * from './config';
export * from './sender';
export declare class Client {
    private readonly config;
    applicationRoles: ApplicationRoles;
    appProperties: AppProperties;
    auditRecords: AuditRecords;
    avatars: Avatars;
    backlog: Backlog;
    board: Board;
    builds: Builds;
    dashboards: Dashboards;
    deployments: Deployments;
    developmentInformation: DevelopmentInformation;
    dynamicModules: DynamicModules;
    epic: Epic;
    featureFlags: FeatureFlags;
    filters: Filters;
    filterSharing: FilterSharing;
    groupAndUserPicker: GroupAndUserPicker;
    groups: Groups;
    issue: Issue;
    /** @deprecated Use <b>issueAttachments</b>. Will be removed in next major version */
    issueAttachment: IssueAttachments;
    issueAttachments: IssueAttachments;
    issueCommentProperties: IssueCommentProperties;
    issueComments: IssueComments;
    issueCustomFieldOptions: IssueCustomFieldOptions;
    issueCustomFieldOptionsApps: IssueCustomFieldOptionsApps;
    issueFieldConfigurations: IssueFieldConfigurations;
    issueFields: IssueFields;
    issueLinks: IssueLinks;
    issueLinkTypes: IssueLinkTypes;
    issueNavigatorSettings: IssueNavigatorSettings;
    issueNotificationSchemes: IssueNotificationSchemes;
    issuePriorities: IssuePriorities;
    issueProperties: IssueProperties;
    issueRemoteLinks: IssueRemoteLinks;
    issueResolutions: IssueResolutions;
    issues: Issues;
    issueSearch: IssueSearch;
    issueSecurityLevel: IssueSecurityLevel;
    issueSecuritySchemes: IssueSecuritySchemes;
    issueTypeProperties: IssueTypeProperties;
    issueTypeSchemes: IssueTypeSchemes;
    issueTypeScreenSchemes: IssueTypeScreenSchemes;
    issueTypes: IssueTypes;
    issueVotes: IssueVotes;
    issueWatchers: IssueWatchers;
    issueWorklogProperties: IssueWorklogProperties;
    issueWorklogs: IssueWorklogs;
    jiraExpressions: JiraExpressions;
    jiraSettings: JiraSettings;
    jql: Jql;
    labels: Labels;
    myself: Myself;
    permissions: Permissions;
    /** @deprecated Use <b>permissionSchemes</b>. Will be removed in next major version */
    permissionsSchemes: PermissionSchemes;
    permissionSchemes: PermissionSchemes;
    projectAvatars: ProjectAvatars;
    projectCategories: ProjectCategories;
    projectComponents: ProjectComponents;
    projectEmail: ProjectEmail;
    projectKeyAndNameValidation: ProjectKeyAndNameValidation;
    projectPermissionSchemes: ProjectPermissionSchemes;
    projectProperties: ProjectProperties;
    projectRoleActors: ProjectRoleActors;
    projectRoles: ProjectRoles;
    projects: Projects;
    projectTypes: ProjectTypes;
    projectVersions: ProjectVersions;
    screens: Screens;
    screenSchemes: ScreenSchemes;
    screenTabFields: ScreenTabFields;
    screenTabs: ScreenTabs;
    sprint: Sprint;
    tasks: Tasks;
    timeTracking: TimeTracking;
    userProperties: UserProperties;
    users: Users;
    userSearch: UserSearch;
    webhooks: Webhooks;
    workflows: Workflows;
    workflowSchemeDrafts: WorkflowSchemeDrafts;
    workflowSchemeProjectAssociations: WorkflowSchemeProjectAssociations;
    workflowSchemes: WorkflowSchemes;
    workflowStatusCategories: WorkflowStatusCategories;
    workflowStatuses: WorkflowStatuses;
    workflowTransitionProperties: WorkflowTransitionProperties;
    workflowTransitionRules: WorkflowTransitionRules;
    private requestInstance;
    constructor(config: Config);
    sendRequest(request: AxiosRequestConfig, callback?: Callback): Promise<any>;
}
